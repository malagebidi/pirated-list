name: Create Scheduled or Manual Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

jobs:
  build-and-release:
    name: Build and Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(gh release view --json tagName --jq .tagName || echo "")
          echo "tag_name=${LATEST_TAG}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for file changes
        id: changed_files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            pirated-content.txt
            pirated-game.txt
            pirated-software.txt
          base_sha: ${{ steps.get_latest_tag.outputs.tag_name || '' }}

      - name: Generate release tag
        if: steps.changed_files.outputs.any_changed == 'true'
        run: echo "RELEASE_TAG=$(date +'%Y-%m-%d-%H%M%S')" >> $GITHUB_ENV

      - name: Combine, format, sort, and deduplicate files
        if: steps.changed_files.outputs.any_changed == 'true'
        run: |
          echo "Files have changed. Processing started..."
          cat pirated-game.txt pirated-content.txt pirated-software.txt | \
          awk -F '.' '{
            if (NF == 2) {
              print "+."$0
            } else {
              print $0
            }
          }' | \
          sort -u > pirated-list.txt
          echo "File processing complete. Final list is sorted and deduplicated."
          ls -l pirated-list.txt

      - name: Create Release and Upload Asset
        if: steps.changed_files.outputs.any_changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: pirated-list.txt
          name: Pirated List - ${{ env.RELEASE_TAG }}
          tag_name: ${{ env.RELEASE_TAG }}
          body: |
            Automated release.
            This release contains the combined list from the source .txt files.
          prerelease: false
          
      - name: Log if no changes
        if: steps.changed_files.outputs.any_changed != 'true'
        run: echo "No changes detected in source files since last release. Skipping new release."
